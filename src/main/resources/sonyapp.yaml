openapi: 3.0.0
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
paths:
  /products:
    get:
      summary: Get all Products
      description: Get all Products
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /products/{id}:
    get:
      summary: Get a Product by ID
      description: Get a Product by ID
      parameters:
        - name: id
          in: path
          description: ID of the Product to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /categories:
    get:
      summary: Get all Categories
      description: Get all Categories
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /cart:
    get:
      summary: Get all Cart Items
      description: Get all Cart Items
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Add a Product to the Cart
      description: Add a Product to the Cart
      parameters:
        - name: id
          in: path
          description: ID of the Product to add to the Cart
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /register:
    post:
      summary: Register a new User
      description: Register a new User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /login:
    post:
      summary: Login a User
      description: Login a User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: float
        description:
          type: string
        rating:
          type: number
          format: float
        quantity:
          type: integer
          format: int32
        category:
          type: object
          properties:
            categoryId:
              type: integer
              format: int64
            categoryName:
              type: string
        imageUrl:
          type: string
          format: url
    Category:
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
        categoryName:
          type: string
    User:
      type: object
      properties:
        userId:
          type: integer
        name:
          type: string
        password:
          type: string
        email:
          type: string
          format: email
        mobileNumber:
          type: string
        address:
          type: string
        role:
          type: string
          enum:
            - ADMIN
            - USER

